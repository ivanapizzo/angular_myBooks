{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass UserService {\n  constructor(http) {\n    this.http = http;\n    this.url = \"http://localhost:3000\";\n    // aquí controlaremos con true y false, si el usuario a iniciado sesión en la app.\n    this.logueado = false;\n    this.logueado = false;\n  }\n  register(user) {\n    let url = \"http://localhost:3000/register\";\n    console.log(this.url + \"/register\");\n    return this.http.post(url, user);\n  }\n  login(user) {\n    return this.http.post(this.url + \"/login\", user);\n  }\n  modifyUser(user) {\n    return this.http.put('http://localhost:3000/modifyUser', user);\n  }\n}\nUserService.ɵfac = function UserService_Factory(t) {\n  return new (t || UserService)(i0.ɵɵinject(i1.HttpClient));\n};\nUserService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UserService,\n  factory: UserService.ɵfac,\n  providedIn: 'root'\n});\nexport { UserService };","map":{"version":3,"names":["UserService","constructor","http","url","logueado","register","user","console","log","post","login","modifyUser","put","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["/Users/ivanapizzo/Desktop/angular_clase1/angular_myBooks/src/app/shared/user.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { User } from '../models/user';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  private url:string = \"http://localhost:3000\";\n  \n  // aquí controlaremos con true y false, si el usuario a iniciado sesión en la app.\n  public logueado:boolean = false;\n  public user:User;\n\n  constructor(private http:HttpClient) { \n    this.logueado = false;\n  }\n\n\n  register(user:User):Observable<Object> {\n\n    let url = \"http://localhost:3000/register\";\n    console.log(this.url+ \"/register\")\n    return this.http.post(url, user)\n\n  }\n\n  login(user:User):Observable<Object> {\n\n    return this.http.post(this.url + \"/login\", user)\n  }\n\n  modifyUser (user:User):Observable<Object> {\n\n    return this.http.put('http://localhost:3000/modifyUser', user);\n  }\n\n}\n"],"mappings":";;AAMA,MAGaA,WAAW;EAQtBC,YAAoBC,IAAe;IAAf,KAAAA,IAAI,GAAJA,IAAI;IANhB,KAAAC,GAAG,GAAU,uBAAuB;IAE5C;IACO,KAAAC,QAAQ,GAAW,KAAK;IAI7B,IAAI,CAACA,QAAQ,GAAG,KAAK;EACvB;EAGAC,QAAQA,CAACC,IAAS;IAEhB,IAAIH,GAAG,GAAG,gCAAgC;IAC1CI,OAAO,CAACC,GAAG,CAAC,IAAI,CAACL,GAAG,GAAE,WAAW,CAAC;IAClC,OAAO,IAAI,CAACD,IAAI,CAACO,IAAI,CAACN,GAAG,EAAEG,IAAI,CAAC;EAElC;EAEAI,KAAKA,CAACJ,IAAS;IAEb,OAAO,IAAI,CAACJ,IAAI,CAACO,IAAI,CAAC,IAAI,CAACN,GAAG,GAAG,QAAQ,EAAEG,IAAI,CAAC;EAClD;EAEAK,UAAUA,CAAEL,IAAS;IAEnB,OAAO,IAAI,CAACJ,IAAI,CAACU,GAAG,CAAC,kCAAkC,EAAEN,IAAI,CAAC;EAChE;;AA7BWN,WAAW,C;mBAAXA,WAAW,EAAAa,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAXhB,WAAW,C;SAAXA,WAAW;EAAAiB,OAAA,EAAXjB,WAAW,CAAAkB,IAAA;EAAAC,UAAA,EAFV;AAAM;SAEPnB,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}