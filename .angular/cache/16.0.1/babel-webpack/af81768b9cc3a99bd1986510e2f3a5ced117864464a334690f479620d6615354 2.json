{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nfunction FormLoginComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 7);\n    i0.ɵɵtext(1, \" Email is neccesary ** \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction FormLoginComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 7);\n    i0.ɵɵtext(1, \"email is neccesary ** \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction FormLoginComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"password has at least 8 characters\");\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"is-invalid\": a0\n  };\n};\nclass FormLoginComponent {\n  constructor(formBuilder) {\n    this.formBuilder = formBuilder;\n    this.buildForm();\n  }\n  buildForm() {\n    const minPassLenght = 8;\n    this.myForm = this.formBuilder.group({\n      'email': [, [Validators.required, Validators.email]],\n      'password': [, [Validators.required, Validators.minLength(minPassLenght)]]\n    });\n  }\n  ngOnInit() {}\n  onSubmit() {\n    console.log('Email:', this.myForm.get('email').value);\n    console.log('Password:', this.myForm.get('password').value);\n  }\n}\nFormLoginComponent.ɵfac = function FormLoginComponent_Factory(t) {\n  return new (t || FormLoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n};\nFormLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: FormLoginComponent,\n  selectors: [[\"app-form-login\"]],\n  decls: 13,\n  vars: 12,\n  consts: [[1, \"container\", 3, \"formGroup\", \"ngSubmit\"], [\"type\", \"email\", \"name\", \"email\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngClass\", \"ngModelChange\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [\"type\", \"password\", \"name\", \"password\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngClass\", \"ngModelChange\"], [4, \"ngIf\"], [1, \"button_form_container\"], [1, \"button_form\"], [1, \"invalid-feedback\"]],\n  template: function FormLoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function FormLoginComponent_Template_form_ngSubmit_0_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(1, \"label\");\n      i0.ɵɵtext(2, \"Email \");\n      i0.ɵɵelementStart(3, \"input\", 1);\n      i0.ɵɵlistener(\"ngModelChange\", function FormLoginComponent_Template_input_ngModelChange_3_listener($event) {\n        return ctx.user.email = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(4, FormLoginComponent_div_4_Template, 2, 0, \"div\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"label\");\n      i0.ɵɵtext(6, \" Password \");\n      i0.ɵɵelementStart(7, \"input\", 3);\n      i0.ɵɵlistener(\"ngModelChange\", function FormLoginComponent_Template_input_ngModelChange_7_listener($event) {\n        return ctx.user.password = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(8, FormLoginComponent_div_8_Template, 2, 0, \"div\", 2);\n      i0.ɵɵtemplate(9, FormLoginComponent_div_9_Template, 2, 0, \"div\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"div\", 5)(11, \"button\", 6);\n      i0.ɵɵtext(12, \" Submit \");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"formGroup\", ctx.myForm);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", ctx.user.email)(\"ngClass\", i0.ɵɵpureFunction1(8, _c0, (ctx.myForm.get(ctx.email).dirty || ctx.myForm.get(\"email\").touched) && !ctx.myForm.get(\"email\").valid));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.myForm.get(\"email\").valid);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", ctx.user.password)(\"ngClass\", i0.ɵɵpureFunction1(10, _c0, (ctx.myForm.get(ctx.password).dirty || ctx.myForm.get(\"password\").touched) && !ctx.myForm.get(\"password\").valid));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.myForm.get(\"password\").valid);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.myForm.get(\"password\").errors.minlenght);\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { FormLoginComponent };","map":{"version":3,"names":["Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","FormLoginComponent","constructor","formBuilder","buildForm","minPassLenght","myForm","group","required","email","minLength","ngOnInit","onSubmit","console","log","get","value","ɵɵdirectiveInject","i1","FormBuilder","selectors","decls","vars","consts","template","FormLoginComponent_Template","rf","ctx","ɵɵlistener","FormLoginComponent_Template_form_ngSubmit_0_listener","FormLoginComponent_Template_input_ngModelChange_3_listener","$event","user","ɵɵtemplate","FormLoginComponent_div_4_Template","FormLoginComponent_Template_input_ngModelChange_7_listener","password","FormLoginComponent_div_8_Template","FormLoginComponent_div_9_Template","ɵɵproperty","ɵɵadvance","ɵɵpureFunction1","_c0","dirty","touched","valid","errors","minlenght"],"sources":["/Users/ivanapizzo/Desktop/angular_clase1/angular_myBooks/src/app/component/form-login/form-login.component.ts","/Users/ivanapizzo/Desktop/angular_clase1/angular_myBooks/src/app/component/form-login/form-login.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, NgForm, Validators } from '@angular/forms';\nimport { User } from 'src/app/models/user';\n\n@Component({\n  selector: 'app-form-login',\n  templateUrl: './form-login.component.html',\n  styleUrls: ['./form-login.component.css']\n})\nexport class FormLoginComponent {\n\n  public myForm : FormGroup;\n\n  constructor( private formBuilder: FormBuilder) {\n\n    this.buildForm();\n  }\n\n    private buildForm() {\n\n      const minPassLenght = 8;\n\n      this.myForm = this.formBuilder.group({\n\n        'email': [, [Validators.required, Validators.email]],\n        'password': [, [Validators.required, Validators.minLength(minPassLenght)]],\n\n\n      })\n      }\n\n      ngOnInit(): void{\n\n      }\n\n      onSubmit() {  \n        console.log('Email:', this.myForm.get('email').value);\n        console.log('Password:', this.myForm.get('password').value);\n      }\n  }\n\n\n","<form [formGroup]=\"myForm\" class=\"container\" (ngSubmit)=\"onSubmit()\">\n\n\n\n        <label>Email\n            <input type=\"email\" class=\"form-control\" name=\"email\" [(ngModel)]=\"user.email\" required\n            [ngClass]=\"{'is-invalid': (myForm.get(email).dirty || myForm.get('email').touched) && !myForm.get('email').valid}\">\n            <div *ngIf=\"!myForm.get('email').valid\" class=\"invalid-feedback\">\n                Email is neccesary **\n            </div>\n\n        </label>\n\n\n        <label> Password\n            <input type=\"password\" class=\"form-control\" name=\"password\" [(ngModel)]=\"user.password\" required\n            [ngClass]=\"{'is-invalid': (myForm.get(password).dirty || myForm.get('password').touched) && !myForm.get('password').valid}\">\n            <div *ngIf=\"!myForm.get('password').valid\" class=\"invalid-feedback\">email is neccesary ** </div>\n            <div *ngIf=\"myForm.get('password').errors.minlenght\">password has at least 8 characters</div>\n        </label>\n\n\n\n        <div class=\"button_form_container\">\n            <button class=\"button_form\">\n                Submit\n            </button>\n        </div>\n\n</form>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}