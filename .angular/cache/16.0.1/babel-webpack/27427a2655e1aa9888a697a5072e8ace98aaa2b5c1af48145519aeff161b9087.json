{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { User } from 'src/app/models/user';\nlet FormRegisterComponent = class FormRegisterComponent {\n  constructor(formBuilder, userService, router) {\n    this.formBuilder = formBuilder;\n    this.userService = userService;\n    this.router = router;\n    this.buildForm();\n  }\n  register() {\n    const user = this.myForm.value;\n    console.log(user);\n  }\n  buildForm() {\n    let minPassLenght = 8;\n    let minNameLenght = 3;\n    this.myForm = new FormGroup({\n      'id_user': new FormControl(null, [Validators.required]),\n      'name': new FormControl(null, [Validators.required, Validators.minLength(minNameLenght)]),\n      'first_last_name': new FormControl(null, [Validators.required, Validators.minLength(minNameLenght)]),\n      'email': new FormControl(null, [Validators.required, Validators.email]),\n      // 'photo': new FormControl(null, Validators.required), \n      'password': new FormControl(null, [Validators.required, Validators.minLength(minPassLenght)]),\n      'retypePassword': new FormControl(null, [Validators.required, Validators.minLength(minPassLenght)])\n    });\n  }\n  ngOnInit() {}\n  onSubmit() {\n    let id_user = this.myForm.get('id_user').value;\n    let name = this.myForm.get('name').value;\n    let first_last_name = this.myForm.get('first_last_name').value;\n    let email = this.myForm.get('email').value;\n    let photo = this.myForm.get('photo').value;\n    let password = this.myForm.get('password').value;\n    let retypePassword = this.myForm.get('retypePassword').value;\n    console.log(`id_user: ${id_user}`);\n    console.log(`name: ${name}`);\n    console.log(`first last name: ${first_last_name}`);\n    console.log(`email: ${email}`);\n    console.log(`photo: ${photo}`);\n    console.log(`Password: ${password}`);\n    console.log(`retype password: ${retypePassword}`);\n    this.registerUser(this.myForm.get('id_user').value, this.myForm.get('name').value, this.myForm.get('first_last_name').value, this.myForm.get('email').value, this.myForm.get('photo').value, this.myForm.get('password').value, this.myForm.get('retypePassword').value);\n  }\n  registerUser(id_user, name, first_last_name, email, photo, password, retypePassword) {\n    let user = new User(id_user = null, name, first_last_name, email, photo, password);\n    if (password === retypePassword) {\n      this.userService.register(user).subscribe(data => {\n        this.userService.user = data[0];\n        console.log(\"Thanks for your register and welcome to this community\");\n        this.router.navigateByUrl('/login');\n      });\n    } else {\n      console.log(\"Password are different. Please write the same passoword twice :)\");\n    }\n  }\n};\nFormRegisterComponent = __decorate([Component({\n  selector: 'app-form-register',\n  templateUrl: './form-register.component.html',\n  styleUrls: ['./form-register.component.css']\n})], FormRegisterComponent);\nexport { FormRegisterComponent };","map":{"version":3,"names":["Component","FormControl","FormGroup","Validators","User","FormRegisterComponent","constructor","formBuilder","userService","router","buildForm","register","user","myForm","value","console","log","minPassLenght","minNameLenght","required","minLength","email","ngOnInit","onSubmit","id_user","get","name","first_last_name","photo","password","retypePassword","registerUser","subscribe","data","navigateByUrl","__decorate","selector","templateUrl","styleUrls"],"sources":["/Users/ivanapizzo/Desktop/angular_clase1/angular_myBooks/src/app/component/form-register/form-register.component.ts"],"sourcesContent":["import { ParseSourceSpan } from '@angular/compiler';\nimport { Component } from '@angular/core';\nimport { AbstractControl, FormBuilder, FormControl, FormGroup, ValidationErrors, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { User } from 'src/app/models/user';\nimport { UserService } from 'src/app/shared/user.service';\n\n@Component({\n  selector: 'app-form-register',\n  templateUrl: './form-register.component.html',\n  styleUrls: ['./form-register.component.css']\n})\nexport class FormRegisterComponent {\n\n  public myForm : FormGroup;\n\n  constructor(private formBuilder: FormBuilder, public userService: UserService, private router: Router){\n\n    this.buildForm();\n  }\n\n  public register() {\n\n    const user = this.myForm.value;\n    console.log(user);\n  }\n\n  private buildForm() {\n\n      let minPassLenght:number = 8;\n      let minNameLenght:number = 3;\n\n      this.myForm = new FormGroup({\n\n        'id_user': new FormControl (null, [Validators.required]),\n        'name': new FormControl (null, [Validators.required, Validators.minLength(minNameLenght)]), \n        'first_last_name': new FormControl(null, [Validators.required, Validators.minLength(minNameLenght)]), \n        'email': new FormControl (null, [Validators.required, Validators.email]), \n        // 'photo': new FormControl(null, Validators.required), \n        'password': new FormControl(null, [Validators.required, Validators.minLength(minPassLenght)]), \n        'retypePassword': new FormControl(null, [Validators.required, Validators.minLength(minPassLenght)]), \n  \n      })\n    }\n  \n    ngOnInit(): void {\n\n    }\n  \n    onSubmit(){\n\n      let id_user = this.myForm.get('id_user').value;\n      let name = this.myForm.get('name').value;\n      let first_last_name = this.myForm.get('first_last_name').value;\n      let email = this.myForm.get('email').value;\n      let photo = this.myForm.get('photo').value;\n      let password = this.myForm.get('password').value;\n      let retypePassword = this.myForm.get('retypePassword').value;\n\n      console.log(`id_user: ${id_user}`);\n      console.log(`name: ${name}`);\n      console.log(`first last name: ${first_last_name}`);\n      console.log(`email: ${email}`);\n      console.log(`photo: ${photo}`);\n      console.log(`Password: ${password}`);\n      console.log(`retype password: ${retypePassword}`);\n      \n      this.registerUser(\n        this.myForm.get('id_user').value,\n        this.myForm.get('name').value, \n        this.myForm.get('first_last_name').value, \n        this.myForm.get('email').value, \n        this.myForm.get('photo').value, \n        this.myForm.get('password').value, \n        this.myForm.get('retypePassword').value);\n    }\n\n\n    registerUser(id_user: number, name:string, first_last_name:string, email:string, photo:string, password:string, retypePassword:string) {\n\n        let user = new User (\n          id_user = null,\n          name,\n          first_last_name,\n          email,\n          photo,\n          password, \n          \n        )\n        if(password === retypePassword){\n          this.userService.register(user).subscribe((data:any) => {\n            this.userService.user = data[0];\n            console.log(\"Thanks for your register and welcome to this community\");\n            this.router.navigateByUrl('/login');\n          }) \n        } else {\n            console.log(\"Password are different. Please write the same passoword twice :)\")\n          \n        } \n    }\n\n}\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}