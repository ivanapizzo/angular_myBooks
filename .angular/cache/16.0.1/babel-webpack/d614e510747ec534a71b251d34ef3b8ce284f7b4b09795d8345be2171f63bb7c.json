{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nlet FormRegisterComponent = class FormRegisterComponent {\n  constructor(formBuilder) {\n    this.formBuilder = formBuilder;\n    this.buildForm();\n  }\n  register() {\n    const user = this.myForm.value;\n    console.log(user);\n  }\n  buildForm() {\n    let minPassLenght = 8;\n    this.myForm = new FormGroup({\n      'name': new FormControl(null, [Validators.required, Validators.minLength(3)]),\n      'lastName': new FormControl(null, [Validators.required, Validators.minLength(3)]),\n      'email': new FormControl(null, [Validators.required, Validators.email]),\n      // 'url': new FormControl(null, Validators.required), \n      'password': new FormControl(null, [Validators.required, Validators.minLength(minPassLenght)]),\n      'retypePassword': new FormControl(null, [Validators.required, Validators.minLength(minPassLenght)])\n    });\n  }\n  ngOnInit() {}\n  onSubmit() {\n    let name = this.myForm.get('name').value;\n    let lastName = this.myForm.get('lastName').value;\n    let email = this.myForm.get('email').value;\n    let password = this.myForm.get('password').value;\n    let retypePassword = this.myForm.get('retyPassword').value;\n    console.log(`name: ${name}, last name: ${lastName}`);\n    console.log(`email: ${email}`);\n    console.log(`Password: ${password}, verification: ${retypePassword}`);\n  }\n};\nFormRegisterComponent = __decorate([Component({\n  selector: 'app-form-register',\n  templateUrl: './form-register.component.html',\n  styleUrls: ['./form-register.component.css']\n})], FormRegisterComponent);\nexport { FormRegisterComponent };","map":{"version":3,"names":["Component","FormControl","FormGroup","Validators","FormRegisterComponent","constructor","formBuilder","buildForm","register","user","myForm","value","console","log","minPassLenght","required","minLength","email","ngOnInit","onSubmit","name","get","lastName","password","retypePassword","__decorate","selector","templateUrl","styleUrls"],"sources":["/Users/ivanapizzo/Desktop/angular_clase1/angular_myBooks/src/app/component/form-register/form-register.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { AbstractControl, FormBuilder, FormControl, FormGroup, ValidationErrors, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-form-register',\n  templateUrl: './form-register.component.html',\n  styleUrls: ['./form-register.component.css']\n})\nexport class FormRegisterComponent {\n\n  public myForm : FormGroup;\n\n  constructor(private formBuilder: FormBuilder){\n\n    this.buildForm();\n  }\n\n  public register() {\n\n    const user = this.myForm.value;\n    console.log(user);\n  }\n\n  private buildForm() {\n\n      let minPassLenght:number = 8;\n\n      this.myForm = new FormGroup({\n        'name': new FormControl (null, [Validators.required, Validators.minLength(3)]), \n        'lastName': new FormControl(null, [Validators.required, Validators.minLength(3)]), \n        'email': new FormControl (null, [Validators.required, Validators.email]), \n        // 'url': new FormControl(null, Validators.required), \n        'password': new FormControl(null, [Validators.required, Validators.minLength(minPassLenght)]), \n        'retypePassword': new FormControl(null, [Validators.required, Validators.minLength(minPassLenght)]), \n  \n      })\n    }\n  \n    ngOnInit(): void {\n\n    }\n  \n    onSubmit(){\n\n      let name = this.myForm.get('name').value;\n      let lastName = this.myForm.get('lastName').value;\n      let email = this.myForm.get('email').value;\n      let password = this.myForm.get('password').value;\n      let retypePassword = this.myForm.get('retyPassword').value;\n\n      console.log(`name: ${name}, last name: ${lastName}`);\n      console.log(`email: ${email}`);\n      console.log(`Password: ${password}, verification: ${retypePassword}`);\n    }\n}\n\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AACzC,SAAuCC,WAAW,EAAEC,SAAS,EAAoBC,UAAU,QAAQ,gBAAgB;AAOnH,IAAaC,qBAAqB,GAAlC,MAAaA,qBAAqB;EAIhCC,YAAoBC,WAAwB;IAAxB,KAAAA,WAAW,GAAXA,WAAW;IAE7B,IAAI,CAACC,SAAS,EAAE;EAClB;EAEOC,QAAQA,CAAA;IAEb,MAAMC,IAAI,GAAG,IAAI,CAACC,MAAM,CAACC,KAAK;IAC9BC,OAAO,CAACC,GAAG,CAACJ,IAAI,CAAC;EACnB;EAEQF,SAASA,CAAA;IAEb,IAAIO,aAAa,GAAU,CAAC;IAE5B,IAAI,CAACJ,MAAM,GAAG,IAAIR,SAAS,CAAC;MAC1B,MAAM,EAAE,IAAID,WAAW,CAAE,IAAI,EAAE,CAACE,UAAU,CAACY,QAAQ,EAAEZ,UAAU,CAACa,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;MAC9E,UAAU,EAAE,IAAIf,WAAW,CAAC,IAAI,EAAE,CAACE,UAAU,CAACY,QAAQ,EAAEZ,UAAU,CAACa,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;MACjF,OAAO,EAAE,IAAIf,WAAW,CAAE,IAAI,EAAE,CAACE,UAAU,CAACY,QAAQ,EAAEZ,UAAU,CAACc,KAAK,CAAC,CAAC;MACxE;MACA,UAAU,EAAE,IAAIhB,WAAW,CAAC,IAAI,EAAE,CAACE,UAAU,CAACY,QAAQ,EAAEZ,UAAU,CAACa,SAAS,CAACF,aAAa,CAAC,CAAC,CAAC;MAC7F,gBAAgB,EAAE,IAAIb,WAAW,CAAC,IAAI,EAAE,CAACE,UAAU,CAACY,QAAQ,EAAEZ,UAAU,CAACa,SAAS,CAACF,aAAa,CAAC,CAAC;KAEnG,CAAC;EACJ;EAEAI,QAAQA,CAAA,GAER;EAEAC,QAAQA,CAAA;IAEN,IAAIC,IAAI,GAAG,IAAI,CAACV,MAAM,CAACW,GAAG,CAAC,MAAM,CAAC,CAACV,KAAK;IACxC,IAAIW,QAAQ,GAAG,IAAI,CAACZ,MAAM,CAACW,GAAG,CAAC,UAAU,CAAC,CAACV,KAAK;IAChD,IAAIM,KAAK,GAAG,IAAI,CAACP,MAAM,CAACW,GAAG,CAAC,OAAO,CAAC,CAACV,KAAK;IAC1C,IAAIY,QAAQ,GAAG,IAAI,CAACb,MAAM,CAACW,GAAG,CAAC,UAAU,CAAC,CAACV,KAAK;IAChD,IAAIa,cAAc,GAAG,IAAI,CAACd,MAAM,CAACW,GAAG,CAAC,cAAc,CAAC,CAACV,KAAK;IAE1DC,OAAO,CAACC,GAAG,CAAC,SAASO,IAAI,gBAAgBE,QAAQ,EAAE,CAAC;IACpDV,OAAO,CAACC,GAAG,CAAC,UAAUI,KAAK,EAAE,CAAC;IAC9BL,OAAO,CAACC,GAAG,CAAC,aAAaU,QAAQ,mBAAmBC,cAAc,EAAE,CAAC;EACvE;CACH;AA9CYpB,qBAAqB,GAAAqB,UAAA,EALjCzB,SAAS,CAAC;EACT0B,QAAQ,EAAE,mBAAmB;EAC7BC,WAAW,EAAE,gCAAgC;EAC7CC,SAAS,EAAE,CAAC,+BAA+B;CAC5C,CAAC,C,EACWxB,qBAAqB,CA8CjC;SA9CYA,qBAAqB"},"metadata":{},"sourceType":"module","externalDependencies":[]}