{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass BooksService {\n  constructor(http) {\n    // this.books = [\n    this.http = http;\n    this.url = \"http://localhost:3000/book\";\n    //   new Book(40040, 1200007, \"Dejar ir\", \"Autoayuda\", \"Dr. David Hawkins\", 19.99, \"https://imagessl4.casadellibro.com/a/l/t7/14/9788494248214.jpg\"),\n    //   new Book(30310, 4170002, \"Los 5 niveles de apego\", \"Autoayuda\", \"Miguel Ruiz Jr\", 14.99, \"https://imagessl7.casadellibro.com/a/l/t7/77/9788479538477.jpg\"),\n    //   new Book(41000, 4000441, \"Titanes\", \"Liderazgo\", \"Tim Ferriss\", 23.99, \"https://images.cdn2.buscalibre.com/fit-in/360x360/39/85/3985f893d89905b8495825bbfac2239b.jpg\"),\n    //   new Book(41009, 1000222, \"Encantado de conocerme\", \"Autoayuda\", \"Borja Vilaseca\", 12.99, \"https://imagessl6.casadellibro.com/a/l/t7/26/9788466361026.jpg\"),\n    //   new Book(77007, 1340098, \"El libro tibetano de los muertos\", \"Espiritualidad, religión\", \"Padma Sambhava\", 16.00, \"https://imagessl9.casadellibro.com/a/l/t7/19/9788472453319.jpg\"),\n    //   new Book(77008, 120008, \"El alquimista\", \"Novela\", \"Paulo Cohelo\", 9.99, \"https://imagessl5.casadellibro.com/a/l/t7/55/9788408144755.jpg\"),\n    // ]\n  }\n  // getAll2():Book[] {\n  //   return this.books;\n  // }\n  getAll() {\n    return this.http.get(this.url);\n  }\n  // getOne(id_book:number):Book[] {\n  //   let getBook:Book[] = [];\n  //   for(let i = 0; i < this.books.length ; i++) {\n  //     if (this.books[i].id_book == id_book){\n  //         getBook.push(this.books[i]);\n  //     }\n  //   } return getBook;\n  // }\n  getOne(id_book) {\n    let url = 'http://localhost:3000/books?id=' + id_book;\n    return this.http.get(url);\n  }\n  // add(book:Book):void {\n  //   this.books.push(book);\n  // }\n  // POST BOOKS\n  add(book) {\n    return this.http.post(this.url, book);\n  }\n  // edit(book:Book):boolean {\n  //     for (let i = 0; i < this.books.length; i++) {\n  //       if (this.books[i].id_book == book.id_book){\n  //         this.books[i] = book;\n  //       }\n  //     }\n  //       return true;\n  // }\n  edit(book) {\n    return this.http.put(this.url, book);\n  }\n  // Devuelve true si lo borra o false si no lo borra\n  // delete(id_book:number):boolean {\n  //   for(let i = 0; i < this.books.length; i++) {\n  //       if (this.books[i].id_book == id_book) {\n  //         this.books.splice(i, 1);\n  //       }\n  //   }\n  //   return true;\n  // }\n  delete(id_book) {\n    return this.http.request('delete', this.url, {\n      body: {\n        id_book: id_book\n      }\n    });\n  }\n}\nBooksService.ɵfac = function BooksService_Factory(t) {\n  return new (t || BooksService)(i0.ɵɵinject(i1.HttpClient));\n};\nBooksService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: BooksService,\n  factory: BooksService.ɵfac,\n  providedIn: 'root'\n});\nexport { BooksService };","map":{"version":3,"names":["BooksService","constructor","http","url","getAll","get","getOne","id_book","add","book","post","edit","put","delete","request","body","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["/Users/ivanapizzo/Desktop/angular_clase1/angular_myBooks/src/app/shared/books.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Book } from '../models/book';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BooksService {\n\n    private url:string = \"http://localhost:3000/book\";\n\n    public books:Book[];\n\n    constructor(private http:HttpClient){\n\n      // this.books = [\n\n      //   new Book(40040, 1200007, \"Dejar ir\", \"Autoayuda\", \"Dr. David Hawkins\", 19.99, \"https://imagessl4.casadellibro.com/a/l/t7/14/9788494248214.jpg\"),\n      //   new Book(30310, 4170002, \"Los 5 niveles de apego\", \"Autoayuda\", \"Miguel Ruiz Jr\", 14.99, \"https://imagessl7.casadellibro.com/a/l/t7/77/9788479538477.jpg\"),\n      //   new Book(41000, 4000441, \"Titanes\", \"Liderazgo\", \"Tim Ferriss\", 23.99, \"https://images.cdn2.buscalibre.com/fit-in/360x360/39/85/3985f893d89905b8495825bbfac2239b.jpg\"),\n      //   new Book(41009, 1000222, \"Encantado de conocerme\", \"Autoayuda\", \"Borja Vilaseca\", 12.99, \"https://imagessl6.casadellibro.com/a/l/t7/26/9788466361026.jpg\"),\n      //   new Book(77007, 1340098, \"El libro tibetano de los muertos\", \"Espiritualidad, religión\", \"Padma Sambhava\", 16.00, \"https://imagessl9.casadellibro.com/a/l/t7/19/9788472453319.jpg\"),\n      //   new Book(77008, 120008, \"El alquimista\", \"Novela\", \"Paulo Cohelo\", 9.99, \"https://imagessl5.casadellibro.com/a/l/t7/55/9788408144755.jpg\"),\n\n      // ]\n  }\n\n  // getAll2():Book[] {\n\n  //   return this.books;\n  // }\n\n\n  getAll():Observable<Object> {\n\n    return this.http.get(this.url);\n  }\n\n  // getOne(id_book:number):Book[] {\n\n  //   let getBook:Book[] = [];\n\n  //   for(let i = 0; i < this.books.length ; i++) {\n  //     if (this.books[i].id_book == id_book){\n  //         getBook.push(this.books[i]);\n  //     }\n  //   } return getBook;\n  // }\n\n  getOne(id_book:number):Observable<Object> {\n\n    let url = 'http://localhost:3000/books?id=' + id_book;\n    return this.http.get(url);\n  }\n\n  // add(book:Book):void {\n\n  //   this.books.push(book);\n  // }\n\n  // POST BOOKS\n  add(book:Book):Observable<Object>{\n\n    return this.http.post(this.url, book);\n  }\n\n\n  // edit(book:Book):boolean {\n\n  //     for (let i = 0; i < this.books.length; i++) {\n  //       if (this.books[i].id_book == book.id_book){\n\n  //         this.books[i] = book;\n  //       }\n  //     }\n\n  //       return true;\n  // }\n\n  edit(book:Book):Observable<Object> {\n\n    return this.http.put(this.url, book)\n  }\n\n\n  // Devuelve true si lo borra o false si no lo borra\n\n  // delete(id_book:number):boolean {\n  //   for(let i = 0; i < this.books.length; i++) {\n  //       if (this.books[i].id_book == id_book) {\n  //         this.books.splice(i, 1);\n  //       }\n  //   }\n  //   return true;\n  // }\n\n  delete(id_book:number):Observable<Object> {\n\n    return this.http.request('delete', this.url, {body:{id_book:id_book}});\n  }\n\n\n}\n"],"mappings":";;AAKA,MAGaA,YAAY;EAMrBC,YAAoBC,IAAe;IAEjC;IAFkB,KAAAA,IAAI,GAAJA,IAAI;IAJhB,KAAAC,GAAG,GAAU,4BAA4B;IAQ/C;IACA;IACA;IACA;IACA;IACA;IAEA;EACJ;EAEA;EAEA;EACA;EAGAC,MAAMA,CAAA;IAEJ,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAC,IAAI,CAACF,GAAG,CAAC;EAChC;EAEA;EAEA;EAEA;EACA;EACA;EACA;EACA;EACA;EAEAG,MAAMA,CAACC,OAAc;IAEnB,IAAIJ,GAAG,GAAG,iCAAiC,GAAGI,OAAO;IACrD,OAAO,IAAI,CAACL,IAAI,CAACG,GAAG,CAACF,GAAG,CAAC;EAC3B;EAEA;EAEA;EACA;EAEA;EACAK,GAAGA,CAACC,IAAS;IAEX,OAAO,IAAI,CAACP,IAAI,CAACQ,IAAI,CAAC,IAAI,CAACP,GAAG,EAAEM,IAAI,CAAC;EACvC;EAGA;EAEA;EACA;EAEA;EACA;EACA;EAEA;EACA;EAEAE,IAAIA,CAACF,IAAS;IAEZ,OAAO,IAAI,CAACP,IAAI,CAACU,GAAG,CAAC,IAAI,CAACT,GAAG,EAAEM,IAAI,CAAC;EACtC;EAGA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEAI,MAAMA,CAACN,OAAc;IAEnB,OAAO,IAAI,CAACL,IAAI,CAACY,OAAO,CAAC,QAAQ,EAAE,IAAI,CAACX,GAAG,EAAE;MAACY,IAAI,EAAC;QAACR,OAAO,EAACA;MAAO;IAAC,CAAC,CAAC;EACxE;;AA5FWP,YAAY,C;mBAAZA,YAAY,EAAAgB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAZnB,YAAY,C;SAAZA,YAAY;EAAAoB,OAAA,EAAZpB,YAAY,CAAAqB,IAAA;EAAAC,UAAA,EAFX;AAAM;SAEPtB,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}